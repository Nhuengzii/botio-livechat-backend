openapi: "3.0.1"
info:
  title: "Botio Live Chat API"
  description: "This is an API for Botio livechat system."
  version: "1.0.0"
  contact:
    email: "admin@botio.io"
servers:
  # id is subject to change
  - url: "https://{id}.execute-api.ap-southeast-1.amazonaws.com/{stage}"
    variables:
      id:
        default: "oq0hx8j60a"
      stage:
        default: "dev"
tags:
  - name: all
    description: Operations that involve all platforms this api supports
  - name: facebook
    description: Operations that involve facebook platform
  - name: instagram
    description: Operations that involve instagram platform
  - name: line
    description: Operations that involve line platform
  - name: webhook
    description: Webhook operations that should only be called by the subscribing web clients
paths:
  /shops/{shop_id}/facebook/{page_id}/conversations/{conversation_id}:
    get:
      tags:
        - facebook
      summary: get a facebook conversation by its conversation_id
      description: |
        By passing in appropriate path parameters, you can search for
        a facebook conversation of specific shop and page that matches the conversation_id
      operationId: getFacebookConversation
      parameters:
        - $ref: "#/components/parameters/ShopID"
        - $ref: "#/components/parameters/PageID"
        - $ref: "#/components/parameters/ConversationID"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationWrapper"
        404:
          description: "Not Found"
    patch:
      tags:
        - facebook
      summary: update a facebook conversation's fields with matching conversation_id
      description: |
        By passing in appropriate path parameters and request body, you can update 
        facebook conversation's fields of specific shop and page that matches the conversation_id,
      operationId: patchFacebookConversation
      parameters:
        - $ref: "#/components/parameters/ShopID"
        - $ref: "#/components/parameters/PageID"
        - $ref: "#/components/parameters/ConversationID"
      requestBody:
        $ref: "#/components/requestBodies/ConversationPatch"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
  /shops/{shop_id}/all/conversations:
    get:
      tags:
        - all
      summary: list all conversations of a specific shop
      description: |
        By passing in appropriate path parameter shop_id, you can list
        all conversations of a specific shop that matches the shop_id,
      operationId: listAllConversations
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/facebook/{page_id}/conversations/{conversation_id}/messages:
    get:
      tags:
        - facebook
      summary: list all messages in a specific facebook conversation
      description: |
        By passing in appropriate path parameters, you can list
        all messages of a specific conversation,
        the conversation has to be a facebook conversation
      operationId: listFacebookMessages
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
    post:
      tags:
        - facebook
      summary: send a facebook message to specific conversation
      description: |
        By passing in appropriate path parameters request body and query string parameter
        , you can send a facebook message to a specific conversation,
        the target conversation has to be a facebook conversation
      operationId: postFacebookMessage
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/line/{page_id}/webhook:
    post:
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/facebook/{page_id}:
    get:
      tags:
        - facebook
      summary: get a specific page's facebook conversation statuses
      description: |
        By passing in appropriate path parameters, you can get
        a page's facebook conversation statuses, such as number of
        currently unread conversations
      operationId: getFacebookPageStatus
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/instagram/{page_id}/conversations:
    get:
      tags:
        - instagram
      summary: list all conversations of a specific instagram page
      description: |
        By passing in appropriate path parameters, you can list
        all conversations of a specific instagram page,
      operationId: listInstagramConversations
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/facebook/{page_id}/webhook:
    get:
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
    post:
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/instagram/{page_id}/webhook:
    get:
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
    post:
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/instagram/{page_id}/conversations/{conversation_id}/messages:
    get:
      tags:
        - instagram
      summary: list all messages in a specific instagram conversation
      description: |
        By passing in appropriate path parameters, you can list
        all messages of a specific instagram conversation,
      operationId: listInstagramMessages
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
    post:
      tags:
        - instagram
      summary: send an instagram message to specific instagram conversation
      description: |
        By passing in appropriate path parameters body and query string parameters, 
        you can send an instagram message to a specific instagram conversation,
      operationId: postInstagramMessage
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/facebook/{page_id}/conversations:
    get:
      tags:
        - facebook
      summary: list all conversations of a specific facebook page
      description: |
        By passing in appropriate path parameters, you can list
        all conversations of a specific facebook page,
      operationId: listFacebookConversations
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/line/{page_id}:
    get:
      tags:
        - line
      summary: get a specific page's line conversation statuses
      description: |
        By passing in appropriate path parameters, you can get
        a page's line conversation statuses, such as number of
        currently unread conversations
      operationId: getLinePageStatus
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/line/{page_id}/conversations/{conversation_id}/messages:
    get:
      tags:
        - line
      summary: list all messages in a specific line conversation
      description: |
        By passing in appropriate path parameters, you can list
        all messages of a specific line conversation,
      operationId: listLineMessages
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
    post:
      tags:
        - line
      summary: send a line message to specific line conversation
      description: |
        By passing in appropriate path parameters body and query string parameters, 
        you can send a line message to a specific line conversation,
      operationId: postLineMessage
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/instagram/{page_id}:
    get:
      tags:
        - instagram
      summary: get a specific page's instagram conversation statuses
      description: |
        By passing in appropriate path parameters, you can get
        a page's instagram conversation statuses, such as number of
        currently unread conversations
      operationId: getInstagramPageStatus
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/line/{page_id}/conversations:
    get:
      tags:
        - line
      summary: list all conversations of a specific line page
      description: |
        By passing in appropriate path parameters, you can list
        all conversations of a specific line page,
      operationId: listLineConversations
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/instagram/{page_id}/conversations/{conversation_id}:
    get:
      tags:
        - instagram
      summary: get an instagram conversation by its conversation_id
      description: |
        By passing in appropriate path parameters, you can search for
        an instagram conversation of specific shop and page that matches the conversation_id
      operationId: getInstagramConversation
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
    patch:
      tags:
        - instagram
      summary: update an instagram conversation's fields with matching conversation_id
      description: |
        By passing in appropriate path parameters and request body, you can update 
        instagram conversation's fields of specific shop and page that matches the conversation_id,
      operationId: patchInstagramConversation
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
  /shops/{shop_id}/line/{page_id}/conversations/{conversation_id}:
    get:
      tags:
        - line
      summary: get a line conversation by its conversation_id
      description: |
        By passing in appropriate path parameters, you can search for
        a line conversation of specific shop and page that matches the conversation_id
      operationId: getLineConversation
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
    patch:
      tags:
        - line
      summary: update a line conversation's fields with matching conversation_id
      description: |
        By passing in appropriate path parameters and request body, you can update 
        line conversation's fields of specific shop and page that matches the conversation_id,
      operationId: patchLineConversation
      responses:
        "200":
          description: successful
      parameters:
        - name: "shop_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "page_id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conversation_id"
          in: "path"
          required: true
          schema:
            type: "string"
components:
  schemas:
    Message:
      required:
        - shopID
        - platform
        - pageID
        - conversationID
        - messageID
        - timestamp
        - source
        - message
        - attachments
        - isDeleted
      type: object
      properties:
        shopID:
          type: string
        platform:
          type: string
        pageID:
          type: string
        conversationID:
          type: string
        messageID:
          type: string
        timestamp:
          type: integer
          format: int64
        source:
          $ref: "#/components/schemas/Source"
        message:
          type: string
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
        replyTo:
          $ref: "#/components/schemas/RepliedMessage"
        isDeleted:
          type: boolean
    Source:
      required:
        - userID
        - userType
      type: object
      properties:
        userID:
          type: string
        userType:
          type: string
    Attachment:
      required:
        - attachmentType
        - payload
      type: object
      properties:
        attachmentType:
          type: string
        payload:
          $ref: "#/components/schemas/Payload"
    Payload:
      required:
        - src
      type: object
      properties:
        src:
          type: string
    RepliedMessage:
      required:
        - messageID
      type: object
      properties:
        messageID:
          type: string
    Conversation:
      required:
        - shopID
        - platform
        - pageID
        - conversationID
        - conversationPic
        - updatedTime
        - participants
        - lastActivity
        - unread
      type: object
      properties:
        shopID:
          type: string
        platform:
          type: string
        pageID:
          type: string
        conversationID:
          type: string
        conversationPic:
          $ref: "#/components/schemas/Payload"
        updatedTime:
          type: integer
          format: int64
        participants:
          type: array
          items:
            $ref: "#/components/schemas/Participant"
        lastActivity:
          type: string
        unread:
          type: integer
    Participant:
      required:
        - userID
        - username
        - profilePic
      type: object
      properties:
        userID:
          type: string
        username:
          type: string
        profilePic:
          $ref: "#/components/schemas/Payload"
    ConversationArray:
      required:
        - conversations
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversation"
    MessageArray:
      required:
        - messages
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    ConversationWrapper:
      required:
        - conversation
      type: object
      properties:
        conversation:
          $ref: "#/components/schemas/Conversation"
    MessageWrapper:
      required:
        - message
      type: object
      properties:
        message:
          $ref: "#/components/schemas/Message"
  parameters:
    ShopID:
      name: shop_id
      in: path
      required: true
      schema:
        type: string
    PageID:
      name: page_id
      in: path
      required: true
      schema:
        type: string
    ConversationID:
      name: conversation_id
      in: path
      required: true
      schema:
        type: string
  requestBodies:
    ConversationPatch:
      content:
        application/json:
          schema:
            type: object
            properties:
              unread:
                type: integer